// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//USER ========================================================================================
model User {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  password       String
  role           Role    @default(USER)
  isActivated    Boolean @default(false)
  activationLink String

  refreshToken RefreshToken[]

  profile Profile?
  cart    Cart?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id       Int     @id @default(autoincrement())
  name     String?
  phone    String? @unique
  birthday String?
  address  String?
  user     User    @relation(fields: [userId], references: [id])
  userId   Int     @unique
}

model RefreshToken {
  id           Int    @id @default(autoincrement())
  refreshToken String @unique
  user         User   @relation(fields: [userId], references: [id])
  userId       Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//CART ========================================================================================

model Cart {
  user       User          @relation(fields: [userId], references: [id])
  userId     Int           @unique
  cart_items CartProduct[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartProduct {
  cart      Cart    @relation(fields: [cartId], references: [userId])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  count Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId], name: "UniqueCartItem")
}

//PRODUCT ========================================================================================

model Product {
  id   Int    @id @default(autoincrement())
  name String
  img  String[]

  price    Float
  discount Float @default(0)
  stock    Int   @default(0)

  isAvailable Boolean @default(false)

  cart_items  CartProduct[]
  productInfo ProductInfo[]

  categories Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductInfo {
  id          Int    @id @default(autoincrement())
  title       String
  description String

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  EMPLOYEE
}
